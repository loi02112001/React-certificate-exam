{"version":3,"file":"static/js/310.823617b7.chunk.js","mappings":"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","sources":["components/ResultForm.js","containers/QuizResult.js","redux/selectors/QuestionSelector.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst ResultForm = ({\r\n  questions,\r\n  choosedAnswers,\r\n  rightAnswerCount,\r\n  onCreateNewQuiz,\r\n}) => {\r\n  const getColorOfScore = () => {\r\n    if (rightAnswerCount <= 1) {\r\n      return \"bg-danger\";\r\n    }\r\n\r\n    if (rightAnswerCount === 2 || rightAnswerCount === 3) {\r\n      return \"bg-warning\";\r\n    }\r\n\r\n    if (rightAnswerCount === 4 || rightAnswerCount === 5) {\r\n      return \"bg-success\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {questions.map((question, index) => (\r\n        <QuestionItem\r\n          key={index}\r\n          question={question.question}\r\n          answers={question.answers}\r\n          choosedAnswer={\r\n            choosedAnswers.find((item) => item.question === question.question)\r\n              .answer\r\n          }\r\n          correctAnswer={question.correct_answer}\r\n        />\r\n      ))}\r\n      <p className={`text-center ${getColorOfScore()}`}>\r\n        You scored {rightAnswerCount} out of {questions.length}\r\n      </p>\r\n      <CreateANewQuizItem onCreateNewQuiz={onCreateNewQuiz} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst QuestionItem = ({ question, answers, choosedAnswer, correctAnswer }) => {\r\n  const getColorOfAnswer = (answer) => {\r\n    if (answer === correctAnswer) {\r\n      return \"success\";\r\n    }\r\n\r\n    if (answer === choosedAnswer) {\r\n      return \"danger\";\r\n    }\r\n\r\n    return \"outline-primary\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p dangerouslySetInnerHTML={{ __html: question }} />\r\n      {answers.map((answer, index) => (\r\n        <Button\r\n          key={index}\r\n          className=\"me-2 mb-4\"\r\n          variant={getColorOfAnswer(answer)}\r\n        >\r\n          <span dangerouslySetInnerHTML={{ __html: answer }} />\r\n        </Button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const CreateANewQuizItem = ({ onCreateNewQuiz }) => {\r\n  return (\r\n    <div className=\"mt-3 d-grid gap-2\">\r\n      <Button onClick={onCreateNewQuiz}>Create a new quiz</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultForm;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectListQuestions,\r\n  selectListChoosedAnswers,\r\n} from \"../redux/selectors/QuestionSelector\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport ResultForm, { CreateANewQuizItem } from \"../components/ResultForm\";\r\n\r\nconst QuizResultPage = ({ questions, choosedAnswers }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const getRightAnswerCount = () => {\r\n    let count = 0;\r\n    for (const choosedAnswer of choosedAnswers) {\r\n      if (\r\n        questions.find((item) => item.question === choosedAnswer.question)\r\n          .correct_answer === choosedAnswer.answer\r\n      ) {\r\n        count++;\r\n      }\r\n    }\r\n    return count;\r\n  };\r\n\r\n  const redirectToQuizMakerPage = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  if (choosedAnswers.length === 0) {\r\n    return (\r\n      <>\r\n        <p className=\"text-center\">You haven't been take a quiz</p>\r\n        <CreateANewQuizItem onCreateNewQuiz={redirectToQuizMakerPage} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"p-0\">\r\n        <h2 className=\"text-center\">RESULTS</h2>\r\n        <div className=\"mt-3 d-flex justify-content-center\">\r\n          <div>\r\n            <ResultForm\r\n              questions={questions}\r\n              choosedAnswers={choosedAnswers}\r\n              rightAnswerCount={getRightAnswerCount()}\r\n              onCreateNewQuiz={redirectToQuizMakerPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    questions: selectListQuestions(state),\r\n    choosedAnswers: selectListChoosedAnswers(state),\r\n  };\r\n})(QuizResultPage);\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst selectListQuestionSelector = createSelector(\r\n  (state) => state.question,\r\n  (state) => state.questions\r\n);\r\n\r\nconst selectLoadingSelector = createSelector(\r\n  (state) => state.question,\r\n  (state) => state.isLoading\r\n);\r\n\r\nconst selectListChoosedAnswerSelector = createSelector(\r\n  (state) => state.question,\r\n  (state) => state.choosedAnswers\r\n);\r\n\r\nexport const selectListQuestions = (state) => {\r\n  return selectListQuestionSelector(state);\r\n};\r\n\r\nexport const selectLoading = (state) => {\r\n  return selectLoadingSelector(state);\r\n};\r\n\r\nexport const selectListChoosedAnswers = (state) => {\r\n  return selectListChoosedAnswerSelector(state);\r\n};\r\n","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["QuestionItem","_ref2","question","answers","choosedAnswer","correctAnswer","getColorOfAnswer","answer","_jsxs","_Fragment","children","_jsx","dangerouslySetInnerHTML","__html","map","index","Button","className","variant","CreateANewQuizItem","_ref3","onCreateNewQuiz","onClick","_ref","questions","choosedAnswers","rightAnswerCount","find","item","correct_answer","concat","length","connect","state","selectListQuestions","selectListChoosedAnswers","navigate","useNavigate","redirectToQuizMakerPage","Container","fluid","ResultForm","getRightAnswerCount","count","selectListQuestionSelector","createSelector","selectLoadingSelector","isLoading","selectListChoosedAnswerSelector","selectLoading","_excluded","useButtonProps","tagName","disabled","href","target","rel","role","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","React","ref","as","asProp","props","source","excluded","i","sourceKeys","Object","keys","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","displayName","bsPrefix","size","active","prefix","useBootstrapPrefix","classNames"],"sourceRoot":""}